s
n
n
asm-prof
n
n
n
src-prof
b commands.c:173
c
stepi
s
stepi
asm-prof
stepi
src-prof
s
n
s
n
s
print name
n
n
n
n
s
n
n
n
n
n
n
print BASE_PRIORITY
print quatum[BASE_PRIORITY]
print quantum[BASE_PRIORITY]
p sizeof(quantum)
p sizeof(quantum)/sizeof(PCB *)
p sizeof(quantum)/sizeof(unsigned int)
n
n
print aux
print *aux
n
n
n
n
s
quit
b createProcess
c
finish
finish
finish
finish
finish
src-prof
s
stepi
stepi
asm-prof
stepi
s
src-prof
n
s
n
s
n
n
n
n
n
n
n
n
n
n
s
n
print *main
src-prof
b prepareStackProcess
c
c
n
print argv
print *argv
print argv[0]
print sizeof(argv)
print sizeof(argv)/sizeof(char *)
src-prof
b testProcesses
b testProcess
c
b process.c:45
c
p *curr_process
b kill
info b
disable 1.2
c
p *curr_process
p exp_queue[3]
p exp_queue[3]->first
p *(exp_queue[3]->first)
s
s
p **pp
p *pp
s
s
s
s
curr_process->pid
p curr_process->pid
p pid
s
s
b scheduler
info b
disable 1.1
disable 2
b process.c:45
c
p *(exp_queue[3]->first)
*curr_process
p *curr_process
src-prof
s
s
s
s
s
s
s
s
s
s
s
s
p *(exp_queue[3]->first)
p exp_queue[3]
s
s
p exp_queue[3]
p *(exp_queue[3]->first)
p (exp_queue[3]->last)->next_in_queue
p *((exp_queue[3]->last)->next_in_queue)
src-prof
s
p exp_queue[3]
p (exp_queue[3]->first)->next_in_queue
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
p act_queue[3]
s
s
s
s
s
s
s
s
s
s
act_queue[prior].first
p act_queue[prior].first
p *(act_queue[prior].first)
s
*curr_process
p *curr_process
s
p *curr_process
s
s
s
s
s
stepi
asm-prof
stepi
src-prof
s
s
s
n
n
s
finish
n
finish
*curr_process
p *curr_process
s
s
s
s
s
s
s
s
srs-prof
src-prof
b testProcess
c
quit
src-prof
b testProcess
c
src-prof
b testProcess
c
n
n
n
src-prof
b testProcess
c
n
n
n
b addTimer
c
c
b wait
info b
c
6295204
b loopMain
c
b createProcess
info b
disable 1.2
c
c
c
q
